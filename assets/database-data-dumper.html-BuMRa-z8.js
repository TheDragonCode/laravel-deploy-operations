import{_ as a,c as t,b as o,o as r}from"./app-DbZK4p7a.js";const s={};function i(n,e){return r(),t("div",null,e[0]||(e[0]=[o(`<h1 id="database-dumper" tabindex="-1"><a class="header-anchor" href="#database-dumper"><span>Database Dumper</span></a></h1><p>As you build your application, you may accumulate more and more migrations over time. This can lead to your <code>database/migrations</code> directory becoming bloated with potentially hundreds of migrations. If you would like, you may &quot;squash&quot; your migrations into a single SQL file. To get started, execute the <code>schema:dump</code> command:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">php artisan schema:dump</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>You can read more about the operation of this console command in the <a href="https://laravel.com/docs/11.x/migrations#squashing-migrations" target="_blank" rel="noopener noreferrer">official documentation</a>.</p><p>Here we mention this console command because operations tend to save the execution state in order to prevent re-runs where this is not explicitly allowed. But if you run sequentially the console commands <code>php artisan schema:dump</code> and <code>php artisan migrate:fresh</code>, you will see that all actions will be called again.</p><p>This is due to the fact that the dump mechanism saves the contents of just one table - <code>migrations</code>.</p><p>To solve this problem, there is a <a href="https://github.com/TheDragonCode/laravel-data-dumper" target="_blank" rel="noopener noreferrer">Database Data Dumper</a> project that allows you to specify a list of tables required for export to a dump.</p><p>In addition to those that you can easily specify in its configuration file, we recommend that you also specify the <code>operations</code> table from this project in order to save the state of the operations when performing a clean deployment of the database from a dump.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">composer</span> require dragon-code/laravel-data-dumper <span class="token parameter variable">--dev</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,9)]))}const p=a(s,[["render",i],["__file","database-data-dumper.html.vue"]]),l=JSON.parse('{"path":"/extras/database-data-dumper.html","title":"Database Dumper","lang":"en-US","frontmatter":{"description":"Database Dumper As you build your application, you may accumulate more and more migrations over time. This can lead to your database/migrations directory becoming bloated with p...","head":[["meta",{"property":"og:url","content":"https://deploy-operations.dragon-code.pro/extras/database-data-dumper.html"}],["meta",{"property":"og:site_name","content":"Laravel Deploy Operations"}],["meta",{"property":"og:title","content":"Database Dumper"}],["meta",{"property":"og:description","content":"Database Dumper As you build your application, you may accumulate more and more migrations over time. This can lead to your database/migrations directory becoming bloated with p..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-05-22T20:24:51.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-22T20:24:51.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Database Dumper\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-22T20:24:51.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"updatedTime":1716409491000},"autoDesc":true,"filePathRelative":"extras/database-data-dumper.md"}');export{p as comp,l as data};
